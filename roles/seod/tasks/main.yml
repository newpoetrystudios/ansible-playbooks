---
- include_vars: encrypted.yml

- name: Ensure .ssh directory exists
  file: state=directory path=/home/{{ seod_user }}/.ssh owner={{ seod_user }} group={{ seod_user }}

- name: Ensure GitHub SSH private key file exists
  file: >
    state=file
    path=/home/{{ seod_user }}/.ssh/id_rsa
    owner={{ seod_user }}
    group={{ seod_user }}
    mode=600

- name: give app user access to github repo
  shell: echo '{{ seod_ssh_private_key }}' > id_rsa chdir="/home/{{ seod_user }}/.ssh"

# Avoid known_hosts hangups
- name: Ensure known hosts
  shell: touch ~/.ssh/known_hosts

- name: Remove github.com from known hosts
  shell: ssh-keygen -R github.com

- name: Ensure github.com in known hosts
  shell: ssh-keyscan -H github.com >> ~/.ssh/known_hosts

- name: Ensure latest grunt is installed globally
  npm: >
    name=grunt-cli
    global=yes
    state=present

- name: Ensure latest coffee-script is installed globally
  npm: >
    name=coffee-script
    global=yes
    state=present

- name: Ensure seod base directory exists
  sudo: yes
  file: >
    state=directory
    path={{ seod_base_dir }}
    owner={{ seod_user }}
    group={{ seod_group }}

- name: Pull sources from the repository.
  git: >
    repo={{ seod_repository }}
    dest={{ seod_src_dir }}
    version={{ seod_branch }}

- name: Ensure latest npm modules are installed
  npm: path={{ seod_src_dir }}

- name: Generate release timestamp
  command: date '+%Y%m%d%H%M%S'
  register: release_timestamp

- name: Create release directory
  file: >
    state=directory
    path={{ seod_releases_dir }}/{{ release_timestamp.stdout }}

- name: Copy latest source to release directory
  shell: cp -r {{ seod_src_dir }}/* {{ seod_releases_dir }}/{{ release_timestamp.stdout }}

- name: Build for appropriate environment
  shell: NODE_ENV={{ hostvars[inventory_hostname]['ec2_tag_env'] }} grunt build:web chdir={{ seod_releases_dir }}/{{ release_timestamp.stdout }}

- name: Check for "current" link existence
  shell: test -d {{ seod_current_link }} && echo "exists" || echo ""
  register: current_exists

- name: Remove "current" link, if it exists
  file: state=absent path={{ seod_current_link }}
  when: current_exists == "exists"

- name: Create "current" link
  file: >
    state=link
    src={{ seod_releases_dir }}/{{ release_timestamp.stdout }}
    dest={{ seod_current_link }}

- name: Setup cron entry
  cron: >
    name="sitemap generator"
    minute=0
    job="{{ seod_current_link }}/bin/sitemap.coffee -i /tmp/isrc.json -g /tmp/genres.json -a /tmp/artists.json -s /tmp/sitemap.json -c /tmp/cmd.json -S /tmp/sitemap.xml -p 6379 -h {{ groups['redis'][0] }}"